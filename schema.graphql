# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

input AddBookmarkInput {
  mangaId: ID!
  type: String!
}

input AddChapterInput {
  id: ID!
  mangaId: ID!
  number: Int!
  title: String!
  versions: [ChapterVersionInput!]!
}

input AddMangaInput {
  author: String!
  description: String!
  genres: [ComicsGenre!]!
  id: String!
  image: String!
  languages: [ChapterLanguage!]!
  releaseYear: Int!
  status: ComicsStatus
  title: String!
  type: ComicsType!
  uploadedBy: String!
}

type Bookmark {
  createdAt: String!
  dropped: [Manga!]!
  favourite: [Manga!]!
  finished: [Manga!]!
  id: ID!
  inPlans: [Manga!]!
  reading: [Manga!]!
  updatedAt: String!
  userId: ID!
}

type Chapter {
  createdAt: String!
  id: ID!
  isFirst: Boolean!
  isLast: Boolean!
  languages: [ChapterLanguage!]!
  manga: Manga!
  mangaId: ID!
  nextChapter: Chapter
  number: Int!
  prevChapter: Chapter
  title: String!
  updatedAt: String!
  versions: [ChapterVersion!]!
}

type ChapterBookmark {
  chapter: Chapter
  chapterId: ID!
  createdAt: String!
  id: ID!
  manga: Manga
  mangaId: ID!
  updatedAt: String!
  userId: ID!
}

type ChapterImage {
  height: Float!
  src: String!
  width: Float!
}

enum ChapterLanguage {
  En
  Fr
  Ro
  Ru
}

type ChapterVersion {
  images: [ChapterImage!]!
  language: ChapterLanguage!
}

input ChapterVersionInput {
  images: [ImageInput!]!
  language: ChapterLanguage!
}

enum ComicsGenre {
  action
  adventure
  apocalypse
  comedy
  cultivation
  drama
  fantasy
  game
  genius_MC
  harem
  hero
  historical
  isekai
  loli
  magic
  martial_arts
  mature
  mecha
  murim
  necromancer
  noble
  post_apocalyptic
  rebirth
  regression
  reincarnation
  revenge
  romance
  school_life
  sci_fi
  sport
  system
  thriller
  time_travel
  tower
  tragedy
  villain
  virtual_reality
}

type ComicsRating {
  nrVotes: Int!
  value: Float!
}

type ComicsStats {
  bookmarks: Int!
  likes: Int!
  rating: ComicsRating!
  views: Int!
}

enum ComicsStatus {
  DROPPED
  FINISHED
  ONGOING
  PAUSED
}

enum ComicsType {
  manga
  manhua
  manhwa
}

input EditMangaInput {
  author: String!
  description: String!
  genres: [ComicsGenre!]!
  id: String!
  image: String!
  languages: [ChapterLanguage!]!
  releaseYear: Int!
  status: ComicsStatus
  title: String!
  type: ComicsType!
}

input ImageInput {
  height: Float!
  src: String!
  width: Float!
}

input LikeInput {
  objectId: ID!
  objectType: String!
}

type Manga {
  author: String!
  bookmarkedChapter: Chapter
  chapters: [Chapter!]!
  createdAt: String!
  description: String!
  firstChapter: Chapter
  genres: [ComicsGenre!]!
  id: ID!
  image: String!
  isBanned: Boolean!
  isDeleted: Boolean!
  languages: [ChapterLanguage!]!
  latestChapter: Chapter
  releaseYear: Int!
  stats: ComicsStats!
  status: ComicsStatus!
  title: String!
  type: ComicsType!
  updatedAt: String!
  uploadedBy: String!
}

type Mutation {
  addBookmark(input: AddBookmarkInput!): Bookmark
  addChapter(chapter: AddChapterInput!): Chapter!
  addChapterBookmark(chapterId: String!): ChapterBookmark
  addManga(manga: AddMangaInput!): Manga!
  addRating(input: RatingInput!): Float
  deleteBookmark(mangaId: String!): String
  deleteChapterBookmark(chapterId: String!): ChapterBookmark
  deleteChapters(ids: [ID!]!, mangaId: ID!): String!
  deleteManga(id: String!): ID!
  deleteRating(mangaId: String!): String
  editManga(manga: EditMangaInput!): Manga!
  incrementViews(id: String!): Int
  like(input: LikeInput!): String
  signUp(user: UserSignUp!): User
  unlike(objectId: String!): String
}

type Query {
  chapter(id: ID!): Chapter!
  getBookmarkedChapter(mangaId: String!): ChapterBookmark
  isBookmarked(mangaId: ID!): String
  isLiked(objectId: ID!): Boolean
  isRated(mangaId: ID!): Int
  latestChapters(limit: Int, sortBy: String): [Chapter!]!
  manga(id: ID!): Manga
  mangas(genres: [ComicsGenre!], languages: [ChapterLanguage!], limit: Int, search: String, sort: String, sortBy: String, statuses: [ComicsStatus!], types: [ComicsType!]): [Manga!]!
  signIn(user: UserSignIn!): User
  user: User
}

input RatingInput {
  mangaId: ID!
  value: Int!
}

type User {
  bookmarkId: ID!
  bookmarks: Bookmark
  chapterBookmarks: [ChapterBookmark!]!
  createdAt: String!
  email: String!
  emailToken: String
  emailTokenExpiry: String
  emailVerified: Boolean!
  id: ID!
  image: String!
  name: String!
  password: String
  preferences: UserPreferences!
  provider: UserProvider!
  role: UserRole!
  updatedAt: String!
}

type UserPreferences {
  language: ChapterLanguage
}

enum UserProvider {
  CREDENTIALS
  FACEBOOK
  GOOGLE
}

enum UserRole {
  ADMIN
  MODERATOR
  USER
}

input UserSignIn {
  email: String!
  password: String!
}

input UserSignUp {
  email: String!
  name: String!
  password: String!
}